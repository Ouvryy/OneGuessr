{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\oneguessr-ready\\\\src\\\\pages\\\\GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Button, Typography, LinearProgress, Card, CardContent, Grid, Avatar, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ARC_LOCATIONS = [{\n  from: 1,\n  to: 3,\n  location: 'East Blue'\n}, {\n  from: 4,\n  to: 8,\n  location: \"Ville d'Orange\"\n}, {\n  from: 9,\n  to: 18,\n  location: 'Village de Sirop'\n}, {\n  from: 19,\n  to: 30,\n  location: 'Baratie'\n}, {\n  from: 31,\n  to: 45,\n  location: 'Arlong Park'\n}, {\n  from: 48,\n  to: 53,\n  location: 'Loguetown'\n}, {\n  from: 61,\n  to: 63,\n  location: 'Reverse Mountain'\n}, {\n  from: 64,\n  to: 67,\n  location: 'Whiskey Peak'\n}, {\n  from: 70,\n  to: 78,\n  location: 'Little Garden'\n}, {\n  from: 79,\n  to: 91,\n  location: 'Royaume de Drum'\n}, {\n  from: 92,\n  to: 130,\n  location: 'Alabasta'\n}, {\n  from: 153,\n  to: 195,\n  location: 'Skypiea'\n}, {\n  from: 229,\n  to: 263,\n  location: 'Water 7'\n}, {\n  from: 264,\n  to: 312,\n  location: 'Enies Lobby'\n}, {\n  from: 337,\n  to: 381,\n  location: 'Thriller Bark'\n}, {\n  from: 385,\n  to: 407,\n  location: 'Archipel Sabaody'\n}, {\n  from: 408,\n  to: 417,\n  location: 'Amazon Lily'\n}, {\n  from: 422,\n  to: 452,\n  location: 'Impel Down'\n}, {\n  from: 457,\n  to: 489,\n  location: 'Marineford'\n}, {\n  from: 523,\n  to: 574,\n  location: 'Île des Hommes-Poissons'\n}, {\n  from: 579,\n  to: 625,\n  location: 'Punk Hazard'\n}, {\n  from: 629,\n  to: 746,\n  location: 'Dressrosa'\n}, {\n  from: 751,\n  to: 779,\n  location: 'Zou'\n}, {\n  from: 783,\n  to: 877,\n  location: 'Whole Cake Island'\n}, {\n  from: 890,\n  to: 1088,\n  location: 'Wano'\n}, {\n  from: 1058,\n  to: 1125,\n  location: 'Egg Head'\n}, {\n  from: 1126,\n  to: 1144,\n  location: 'Erbaf'\n}];\nfunction GamePage() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [options, setOptions] = useState([]);\n  const [result, setResult] = useState('');\n  const [dataset, setDataset] = useState([]);\n  const [timer, setTimer] = useState(10);\n  const [gameOver, setGameOver] = useState(false);\n  const [answered, setAnswered] = useState(false);\n  const [errorCount, setErrorCount] = useState(0);\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(localStorage.getItem(\"bestScore\") || 0);\n  useEffect(() => {\n    fetch(\"/onepiece_dataset.json\").then(res => res.json()).then(data => {\n      setDataset(data);\n      pickRandomImage(data);\n    });\n  }, []);\n  useEffect(() => {\n    if (timer === 0) {\n      setErrorCount(prev => prev + 1);\n      setResult('⏱️ Temps écoulé ! Nouvelle image...');\n      if (errorCount >= 2) {\n        setGameOver(true);\n        return;\n      }\n      setTimeout(() => {\n        setAnswered(false);\n        setTimer(10);\n        pickRandomImage(dataset);\n      }, 1000);\n    }\n    if (!gameOver && !answered) {\n      const interval = setInterval(() => setTimer(prev => Math.max(prev - 1, 0)), 1000);\n      return () => clearInterval(interval);\n    }\n  }, [timer, gameOver, answered]);\n  const getLocationByChapter = chapter => {\n    const arc = ARC_LOCATIONS.find(a => chapter >= a.from && chapter <= a.to);\n    return arc ? arc.location : 'Lieu inconnu';\n  };\n  const pickRandomImage = data => {\n    const randomEntry = data[Math.floor(Math.random() * data.length)];\n    const image = randomEntry.images[Math.floor(Math.random() * randomEntry.images.length)].replace(\"https://lelscans.nethttps://lelscans.net\", \"https://lelscans.net\");\n    const chapter = randomEntry.chapter;\n    const location = getLocationByChapter(chapter);\n    setCorrectAnswer(location);\n    setImage(image);\n    const filteredArcs = ARC_LOCATIONS.filter(loc => loc.from >= 640 && loc.location !== location);\n    const shuffled = [location, ...filteredArcs.sort(() => 0.5 - Math.random()).slice(0, 4).map(loc => loc.location)].sort(() => 0.5 - Math.random());\n    setOptions(shuffled);\n    setResult('');\n    setTimer(10);\n    setAnswered(false);\n  };\n  const handleAnswer = choice => {\n    const isCorrect = choice === correctAnswer;\n    setResult(isCorrect ? 'Bravo ! ✅' : `Raté ! ❌ La bonne réponse était : ${correctAnswer}`);\n    if (isCorrect) {\n      setScore(prev => prev + 1);\n    } else {\n      setErrorCount(prev => prev + 1);\n      if (errorCount + 1 >= 3) {\n        setGameOver(true);\n        setResult('Game Over ! 3 erreurs.');\n        return;\n      }\n    }\n    if (score > bestScore) {\n      setBestScore(score);\n      localStorage.setItem(\"bestScore\", score);\n    }\n    setAnswered(true);\n    setTimeout(() => {\n      setAnswered(false);\n      setTimer(10);\n      pickRandomImage(dataset);\n    }, 1000);\n  };\n  const handleReplay = () => {\n    setScore(0);\n    setErrorCount(0);\n    setGameOver(false);\n    setResult('');\n    pickRandomImage(dataset);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      bgcolor: 'black',\n      color: 'white',\n      p: 4,\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      sx: {\n        color: '#E6B96F',\n        fontWeight: 'bold'\n      },\n      children: \"OneGuessr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 2\n      },\n      children: [\"Score: \", score, \" | Meilleur score: \", bestScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), !answered && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        maxWidth: 500,\n        mx: 'auto',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: timer / 10 * 100,\n        sx: {\n          height: 10,\n          bgcolor: '#333',\n          '& .MuiLinearProgress-bar': {\n            bgcolor: '#E6B96F'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        sx: {\n          mt: 1\n        },\n        children: [timer, \"s restantes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleReplay,\n        sx: {\n          bgcolor: '#CC213B',\n          color: 'white'\n        },\n        children: \"Rejouer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [image && !answered && /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            maxWidth: 600,\n            mx: 'auto',\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"Sc\\xE8ne One Piece\",\n            style: {\n              maxHeight: 400,\n              width: '100%',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          justifyContent: \"center\",\n          children: options.slice(0, 4).map((opt, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              fullWidth: true,\n              onClick: () => handleAnswer(opt),\n              sx: {\n                bgcolor: '#E6B96F',\n                color: 'black',\n                fontWeight: 'bold'\n              },\n              children: opt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this), result && /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 4,\n          color: '#E6B96F'\n        },\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"A4eQjKCumi2b2k7P1yA3FdVFewo=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useState","Box","Button","Typography","LinearProgress","Card","CardContent","Grid","Avatar","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","ARC_LOCATIONS","from","to","location","GamePage","_s","image","setImage","correctAnswer","setCorrectAnswer","options","setOptions","result","setResult","dataset","setDataset","timer","setTimer","gameOver","setGameOver","answered","setAnswered","errorCount","setErrorCount","score","setScore","bestScore","setBestScore","localStorage","getItem","fetch","then","res","json","data","pickRandomImage","prev","setTimeout","interval","setInterval","Math","max","clearInterval","getLocationByChapter","chapter","arc","find","a","randomEntry","floor","random","length","images","replace","filteredArcs","filter","loc","shuffled","sort","slice","map","handleAnswer","choice","isCorrect","setItem","handleReplay","sx","minHeight","bgcolor","color","p","textAlign","children","variant","gutterBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","mb","width","maxWidth","mx","value","height","mt","severity","onClick","src","alt","style","maxHeight","objectFit","container","spacing","justifyContent","opt","idx","item","xs","sm","fullWidth","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/oneguessr-ready/src/pages/GamePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  LinearProgress,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Avatar,\r\n  Alert,\r\n} from '@mui/material';\r\n\r\nconst ARC_LOCATIONS = [\r\n  { from: 1, to: 3, location: 'East Blue' },\r\n  { from: 4, to: 8, location: \"Ville d'Orange\" },\r\n  { from: 9, to: 18, location: 'Village de Sirop' },\r\n  { from: 19, to: 30, location: 'Baratie' },\r\n  { from: 31, to: 45, location: 'Arlong Park' },\r\n  { from: 48, to: 53, location: 'Loguetown' },\r\n  { from: 61, to: 63, location: 'Reverse Mountain' },\r\n  { from: 64, to: 67, location: 'Whiskey Peak' },\r\n  { from: 70, to: 78, location: 'Little Garden' },\r\n  { from: 79, to: 91, location: 'Royaume de Drum' },\r\n  { from: 92, to: 130, location: 'Alabasta' },\r\n  { from: 153, to: 195, location: 'Skypiea' },\r\n  { from: 229, to: 263, location: 'Water 7' },\r\n  { from: 264, to: 312, location: 'Enies Lobby' },\r\n  { from: 337, to: 381, location: 'Thriller Bark' },\r\n  { from: 385, to: 407, location: 'Archipel Sabaody' },\r\n  { from: 408, to: 417, location: 'Amazon Lily' },\r\n  { from: 422, to: 452, location: 'Impel Down' },\r\n  { from: 457, to: 489, location: 'Marineford' },\r\n  { from: 523, to: 574, location: 'Île des Hommes-Poissons' },\r\n  { from: 579, to: 625, location: 'Punk Hazard' },\r\n  { from: 629, to: 746, location: 'Dressrosa' },\r\n  { from: 751, to: 779, location: 'Zou' },\r\n  { from: 783, to: 877, location: 'Whole Cake Island' },\r\n  { from: 890, to: 1088, location: 'Wano' },\r\n  { from: 1058, to: 1125, location: 'Egg Head' },\r\n  { from: 1126, to: 1144, location: 'Erbaf' }\r\n];\r\n\r\nfunction GamePage() {\r\n  const [image, setImage] = useState(null);\r\n  const [correctAnswer, setCorrectAnswer] = useState('');\r\n  const [options, setOptions] = useState([]);\r\n  const [result, setResult] = useState('');\r\n  const [dataset, setDataset] = useState([]);\r\n  const [timer, setTimer] = useState(10);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [answered, setAnswered] = useState(false);\r\n  const [errorCount, setErrorCount] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [bestScore, setBestScore] = useState(localStorage.getItem(\"bestScore\") || 0);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/onepiece_dataset.json\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setDataset(data);\r\n        pickRandomImage(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (timer === 0) {\r\n      setErrorCount(prev => prev + 1);\r\n      setResult('⏱️ Temps écoulé ! Nouvelle image...');\r\n\r\n      if (errorCount >= 2) {\r\n        setGameOver(true);\r\n        return;\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setAnswered(false);\r\n        setTimer(10);\r\n        pickRandomImage(dataset);\r\n      }, 1000);\r\n    }\r\n    if (!gameOver && !answered) {\r\n      const interval = setInterval(() => setTimer(prev => Math.max(prev - 1, 0)), 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [timer, gameOver, answered]);\r\n\r\n  const getLocationByChapter = (chapter) => {\r\n    const arc = ARC_LOCATIONS.find(a => chapter >= a.from && chapter <= a.to);\r\n    return arc ? arc.location : 'Lieu inconnu';\r\n  };\r\n\r\n  const pickRandomImage = (data) => {\r\n    const randomEntry = data[Math.floor(Math.random() * data.length)];\r\n    const image = randomEntry.images[Math.floor(Math.random() * randomEntry.images.length)]\r\n      .replace(\"https://lelscans.nethttps://lelscans.net\", \"https://lelscans.net\");\r\n    const chapter = randomEntry.chapter;\r\n    const location = getLocationByChapter(chapter);\r\n\r\n    setCorrectAnswer(location);\r\n    setImage(image);\r\n\r\n    const filteredArcs = ARC_LOCATIONS.filter(loc => loc.from >= 640 && loc.location !== location);\r\n    const shuffled = [\r\n      location,\r\n      ...filteredArcs.sort(() => 0.5 - Math.random()).slice(0, 4).map(loc => loc.location)\r\n    ].sort(() => 0.5 - Math.random());\r\n\r\n    setOptions(shuffled);\r\n    setResult('');\r\n    setTimer(10);\r\n    setAnswered(false);\r\n  };\r\n\r\n  const handleAnswer = (choice) => {\r\n    const isCorrect = choice === correctAnswer;\r\n    setResult(isCorrect ? 'Bravo ! ✅' : `Raté ! ❌ La bonne réponse était : ${correctAnswer}`);\r\n    if (isCorrect) {\r\n      setScore(prev => prev + 1);\r\n    } else {\r\n      setErrorCount(prev => prev + 1);\r\n      if (errorCount + 1 >= 3) {\r\n        setGameOver(true);\r\n        setResult('Game Over ! 3 erreurs.');\r\n        return;\r\n      }\r\n    }\r\n    if (score > bestScore) {\r\n      setBestScore(score);\r\n      localStorage.setItem(\"bestScore\", score);\r\n    }\r\n    setAnswered(true);\r\n    setTimeout(() => {\r\n      setAnswered(false);\r\n      setTimer(10);\r\n      pickRandomImage(dataset);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleReplay = () => {\r\n    setScore(0);\r\n    setErrorCount(0);\r\n    setGameOver(false);\r\n    setResult('');\r\n    pickRandomImage(dataset);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ minHeight: '100vh', bgcolor: 'black', color: 'white', p: 4, textAlign: 'center' }}>\r\n      <Typography variant=\"h4\" gutterBottom sx={{ color: '#E6B96F', fontWeight: 'bold' }}>\r\n        OneGuessr\r\n      </Typography>\r\n      <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n        Score: {score} | Meilleur score: {bestScore}\r\n      </Typography>\r\n\r\n      {!answered && (\r\n        <Box sx={{ width: '100%', maxWidth: 500, mx: 'auto', mb: 2 }}>\r\n          <LinearProgress variant=\"determinate\" value={(timer / 10) * 100} sx={{ height: 10, bgcolor: '#333', '& .MuiLinearProgress-bar': { bgcolor: '#E6B96F' } }} />\r\n          <Typography variant=\"subtitle1\" sx={{ mt: 1 }}>{timer}s restantes</Typography>\r\n        </Box>\r\n      )}\r\n\r\n      {gameOver ? (\r\n        <Box>\r\n          <Alert severity=\"error\" sx={{ mb: 2 }}>{result}</Alert>\r\n          <Button variant=\"contained\" onClick={handleReplay} sx={{ bgcolor: '#CC213B', color: 'white' }}>\r\n            Rejouer\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          {image && !answered && (\r\n            <Box>\r\n              <Card sx={{ maxWidth: 600, mx: 'auto', mb: 2 }}>\r\n                <img src={image} alt=\"Scène One Piece\" style={{ maxHeight: 400, width: '100%', objectFit: 'cover' }} />\r\n              </Card>\r\n              <Grid container spacing={2} justifyContent=\"center\">\r\n                {options.slice(0, 4).map((opt, idx) => (\r\n                  <Grid item xs={12} sm={6} key={idx}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      fullWidth\r\n                      onClick={() => handleAnswer(opt)}\r\n                      sx={{ bgcolor: '#E6B96F', color: 'black', fontWeight: 'bold' }}\r\n                    >\r\n                      {opt}\r\n                    </Button>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n          {result && <Typography sx={{ mt: 4, color: '#E6B96F' }}>{result}</Typography>}\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default GamePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}