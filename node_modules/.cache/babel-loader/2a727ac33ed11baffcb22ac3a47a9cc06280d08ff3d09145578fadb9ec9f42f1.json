{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\oneguessr-ready\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// OneGuessr: GeoGuessr One Piece Edition (React + CSS + JS)\n// Sans backend, avec API publique (Jikan) pour r√©cup√©rer les images\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCATIONS = [{\n  name: 'Alabasta'\n}, {\n  name: 'Skypiea'\n}, {\n  name: 'Water 7'\n}, {\n  name: 'Dressrosa'\n}, {\n  name: 'Whole Cake Island'\n}, {\n  name: 'Wano'\n}];\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [options, setOptions] = useState([]);\n  const [result, setResult] = useState('');\n  useEffect(() => {\n    fetchRandomLocation();\n  }, []);\n  const fetchRandomLocation = async () => {\n    const randomLoc = LOCATIONS[Math.floor(Math.random() * LOCATIONS.length)];\n    setCorrectAnswer(randomLoc.name);\n\n    // Fetch image from Jikan API (random One Piece screenshot by episode or character)\n    try {\n      const res = await fetch('https://api.jikan.moe/v4/anime/21/pictures');\n      const data = await res.json();\n      const randomImg = data.data[Math.floor(Math.random() * data.data.length)].jpg.image_url;\n      setImage(randomImg);\n    } catch (err) {\n      console.error('Image fetch failed:', err);\n      setImage(null);\n    }\n\n    // Shuffle answer options\n    const shuffled = [randomLoc.name, ...LOCATIONS.filter(loc => loc.name !== randomLoc.name).sort(() => 0.5 - Math.random()).slice(0, 3)].sort(() => 0.5 - Math.random());\n    setOptions(shuffled);\n    setResult('');\n  };\n  const handleAnswer = choice => {\n    if (choice === correctAnswer) {\n      setResult('üè¥‚Äç‚ò†Ô∏è Correct ! You‚Äôre a true navigator.');\n    } else {\n      setResult(`‚ùå Nope ! Zoro would‚Äôve chosen \"${choice}\" too... It was ${correctAnswer}.`);\n    }\n    setTimeout(fetchRandomLocation, 2500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF0D OneGuessr: Grand Line Edition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), image ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"One Piece scene\",\n        className: \"scene\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(opt),\n          children: opt\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement de l\\u2019image\\u2026 \\uD83C\\uDF00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zNcEt7Zs1VQLcKI3Y3dw+B50vDY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","LOCATIONS","name","App","_s","image","setImage","correctAnswer","setCorrectAnswer","options","setOptions","result","setResult","fetchRandomLocation","randomLoc","Math","floor","random","length","res","fetch","data","json","randomImg","jpg","image_url","err","console","error","shuffled","filter","loc","sort","slice","handleAnswer","choice","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","opt","idx","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/oneguessr-ready/src/App.js"],"sourcesContent":["// OneGuessr: GeoGuessr One Piece Edition (React + CSS + JS)\n// Sans backend, avec API publique (Jikan) pour r√©cup√©rer les images\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\n\nconst LOCATIONS = [\n  { name: 'Alabasta' },\n  { name: 'Skypiea' },\n  { name: 'Water 7' },\n  { name: 'Dressrosa' },\n  { name: 'Whole Cake Island' },\n  { name: 'Wano' },\n];\n\nfunction App() {\n  const [image, setImage] = useState(null);\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [options, setOptions] = useState([]);\n  const [result, setResult] = useState('');\n\n  useEffect(() => {\n    fetchRandomLocation();\n  }, []);\n\n  const fetchRandomLocation = async () => {\n    const randomLoc = LOCATIONS[Math.floor(Math.random() * LOCATIONS.length)];\n    setCorrectAnswer(randomLoc.name);\n\n    // Fetch image from Jikan API (random One Piece screenshot by episode or character)\n    try {\n      const res = await fetch('https://api.jikan.moe/v4/anime/21/pictures');\n      const data = await res.json();\n      const randomImg = data.data[Math.floor(Math.random() * data.data.length)].jpg.image_url;\n      setImage(randomImg);\n    } catch (err) {\n      console.error('Image fetch failed:', err);\n      setImage(null);\n    }\n\n    // Shuffle answer options\n    const shuffled = [\n      randomLoc.name,\n      ...LOCATIONS.filter(loc => loc.name !== randomLoc.name)\n        .sort(() => 0.5 - Math.random())\n        .slice(0, 3),\n    ].sort(() => 0.5 - Math.random());\n\n    setOptions(shuffled);\n    setResult('');\n  };\n\n  const handleAnswer = (choice) => {\n    if (choice === correctAnswer) {\n      setResult('üè¥‚Äç‚ò†Ô∏è Correct ! You‚Äôre a true navigator.');\n    } else {\n      setResult(`‚ùå Nope ! Zoro would‚Äôve chosen \"${choice}\" too... It was ${correctAnswer}.`);\n    }\n    setTimeout(fetchRandomLocation, 2500);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>üåç OneGuessr: Grand Line Edition</h1>\n      {image ? (\n        <div>\n          <img src={image} alt=\"One Piece scene\" className=\"scene\" />\n          <div className=\"options\">\n            {options.map((opt, idx) => (\n              <button key={idx} onClick={() => handleAnswer(opt)}>\n                {opt}\n              </button>\n            ))}\n          </div>\n          <div className=\"result\">{result}</div>\n        </div>\n      ) : (\n        <p>Chargement de l‚Äôimage‚Ä¶ üåÄ</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}